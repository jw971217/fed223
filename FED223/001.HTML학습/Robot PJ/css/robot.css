@charset "utf-8";

/* 로봇 PJ css - robot.css */
@import url("https://fonts.googleapis.com/css2?family=Black+Ops+One&family=Orbitron:wght@500&display=swap");
/* 공사중표시 */
/* body *{
    outline: 2px dashed lime;
} */

html{
    scroll-behavior: smooth;
}
/* 내부 아이디 요소 위치로 이동시 스크롤 애니메이션을 부드럽게 처리하는 속성
최상위 요소인 html에 셋팅하면 전체페이지 스크롤에 적용됨. (js사용 없이 하는 방법)
*/


/* 초기화 */
html, body, h1, h2, h3, ul, ol{
    margin: 0;
    padding: 0;
}

body{
    height: 3000px;
    /* 배경: 색이반고윙/크 */
    background: url(../images/bg.jpg) no-repeat fixed top/cover;
}

/* 공통class */
.mt1{
    background: url(../images/metal01.jpg) no-repeat center/cover;
    border-radius: 100px 100px 150px 150px;
}
.mt2{
    background: url(../images/metal02.jpg) no-repeat center/cover;
}

/* 빛이나는 로봇 */
.brRo, .brRo::before{
    box-shadow: 0 0 10px 5px cyan;
}

/*************************************************************************************** 
[ css로 애니메이션 하기 ]

-시간에 따라 css 설정이 변경되어 애니메이션 되도록 키프레임을 설정하고 이것을 호출함으로 의도된 연출을 구현하는 것이 css 애니메이션이다.

[ 애니메이션 키프레임 만들기 ]
-키프레임이란? 애니메이션 장면을 넣는 코드

1. 두장면 애니메이션

@keyframes 키프레임 이름{
    from{시작CSS설정}
    to{끝나는 css설정}

}

또는 

@keyframes 키프레임 이름{
    0%{시작CSS설정}
    100%{끝나는 css설정}
}

->만약 from(0%) 설정이 초기설정과 같다면 from 설정은 생략할 수 있다.

2. 여러장면 키프레임

@keyframes 키프레임 이름{
    0%{CSS설정}
    10%{CSS설정}
    20%{CSS설정}
    ...
    80%{CSS설정}
    90%{CSS설정}
    100%{끝나는 css설정}
}

(1) 장면에 대한 시간계산은 어떻게 하나?
->전체시간 * 설정된% / 100

(2) 전체 애니메이션 시간은 언제 셋팅하나?
-> 호출시에 셋팅

[ 설정된 키프레임 호출하는 방법 ]
animation: 이시이지반방마
(이름 시간 이징 지연 반복 방향 마지막상태)

1. 이름(animation-name): 키프레임 이름

2. 시간(animation-duration): 애니메이션 동작시간
-> 초단위(s)

3. 이징(animation-timing-function): easing 가속도

4. 지연(animation-delay):애니메이션 지연시간(s)

5. 반복(animation-interation-count):애니메이션 반복
- 기본값 1, 숫자를 쓰면 숫자만큼 반복함.
-영원히 infinite(인피니트)

6. 방향(animation-direction):시작-> 끝
- 두번이상 반복할 경우 반대경로로 애니메이션 설정
->alternate : 시작 -> 끝, 끝 -> 시작

7. 마지막 상태(animation-fill-mode): 
-애니메이션이 끝났을 때 처음으로 돌아가는게 기본
-forwards (앞쪽에... 즉, 애니끝장면으로 마무리!)
-> 기본값 : backwards(뒤쪽으로, 즉 처음으로)
->유의사항: infinite(영원히)일 때 해당사항이 없다.


***************************************************************************************/

/************************************** 1. 상단영역 **************************************/
/************************************** 1-1. 로고 **************************************/
.logo{
    /* 글자변경 */
    color: aquamarine;
    font: 45px/200px 'Orbitron', sans-serif;
    text-align: center;
    position: fixed;
    top: 100px;
    left: 100px;
    width: 200px;
    height: 200px;
    background: pink url(../images/robot_03.png) no-repeat center 10px/140px; 
    text-shadow: 0px 0px 20px 5px #000;
    border-radius: 50%;

/* 박스그림자 */
/* 내부그림자+외부그림자 (글로우효과) 밝게 주느냐 어둡게 주느냐의 차이  */
    box-shadow: inset 0 0 20px rgb(55, 228, 161), 0 0 20px 5px pink;
    border: 2px solid #ccc;

}
/************************************** 1-2. 내용링크 **************************************/
.link{
    position: absolute;
    top: 100px;
    right: 50px;
}

.link a {
    /* a요소에서 글자색, 밑줄 처리함. */
    color: lawngreen;
    text-decoration: none;
    /* 글자: 스두크/줄체 */
    font: 50px 'Black Ops One'; 
    /* 글자그림색 */
    text-shadow: 2px 2px 2px #000;
}

/* 마우스 오버시 */
.link a:hover{
    color: orangered;
    text-decoration:line-through ;
}

/************************************** 1-3. top **************************************/
.btnTop{
    width: 100px;
    height: 100px;
    /* button 요소는 기본 중앙정렬에 세로중앙도 적용되어 있음 */
    border-radius: 50%;
    border: 5px outset #fff;
    border-style: outset;
    /* 오버시 mdn으로 확인 가능 */
    position: fixed;
    /* 보이는 화면에 고정 */
    bottom: 50px;
    right: 50px;
}

.btnTop a{
    color: blue;
    font: 30px/90px "black ops one";
    /* 버튼요소는 box-sizing:border-box 이므로 내부에 패딩과 보더크기를 포함함
    따라서 보더크기인 5+5=10px을 빼야 컨텐츠 영역의 순수 높이가 된다.
    */
    text-decoration: none;
    display: block;
    /* 크기 디자인 적용위해 block함 */
    width: 100%;
    height: 100%;
}

.btnTop:hover{
    border-style: inset;
    background-color: rgb(129, 129, 129);
}

.btnTop a:hover{
    color: pink;
}


/************************************** 2. 메인영역 **************************************/

/************************************** 2-1. 로봇박스 **************************************/
.robx{
    padding-top: 200px;
    padding-bottom: 400px;
    
}
/* 하위요소 이미지 배경 공통설정 */
.robx>div>div{
    /* 앱솔루트 포지션 */
    position: absolute;
     /* 배경공통설정 */
     background-repeat: no-repeat;
     background-position: center;
     background-size: cover;
}


/************************************** 2-1-1. 로봇 머리 **************************************/
.head{
    width: 200px;
    height: 220px;
    margin: 0 auto;
    /* 마영오는 블록가로중앙 */
    position: relative;
    /* 부모자격 */
}

/* 머리카락 */
.hair{
    background-image: url(../images/metal02.jpg);
    width: 200px;
    height: 55px;
    border-radius: 80px 80px 0px 0px;
}

.cap{
    width: 100px;
    height: 5px;
    background-color: rgb(192, 192, 192);
    top: 50px;
    z-index: 99;
    left: -50px;
    border-radius: 5px 0 0 5px;
}

/* 눈공통 */
.eye{
    width: 50px;
    height: 50px;
    /* 배경공통설정 */
    border-radius: 50% 50% 30% 30%;
    /* 둥근모서리 */
    /* 보더 이중선 */
    border: 4px double #000;

}

/* 왼눈 */
.e1{
    background-image: url(../images/leftleft.jpg);
    top: 60px;
    left: 30px;
}

/* 오른눈 */  
.e2{
    background-image: url(../images/eyeeeeee.jpg);
    top: 60px;
    right: 30px;
}

/* 코 */
.nose{
    top: 110px;
    left:85px;
    width: 30px;
    height: 30px;
    background-image: url(../images/nosenose.jpg);
    border-radius: 15px;
    background-position-x: 0px !important;
}

/* 입 */
.mouth{
    background-image: url(../images/mouthmpoo.jpg);
    width: 60px;
    height: 40px;
    bottom: 30px;
    left: 70px;
}

/* 귀공통 */
.ear{
    width: 20px;
    height: 60px;
    top: 60px;
}

/* 왼귀 */
.el{
    background-image: url(../images/metal02.jpg);
    border-radius: 20px 50px 0 80px;
    left: -20px;
}

/* 오른귀 */
.er{
    border-radius:  50px 20px 80px;
    right: -20px;
}

/************************************** 2-1-2. 로봇몸 **************************************/
.body{
    width: 250px;
    height: 350px;
    margin: 0 auto;
    margin-top: 30px;
    position: relative;
}

/* 목 */
.neck{
    width: 40px;
    height: 30px;
    left: 105px;
    top: -30px;
}

/* 공통 팔 */
/* important 없이 우선 순위 높이는 방법은 부모를 써준다. */
.arm{
    width: 40px;
    height: 250px;
    background-size: 100%;
    background-repeat: repeat-y;
    border-radius: 20%;
}

/* 가상요소로 손 만들기 */
.arm::before{
    content: '';
    display: block;
    position: absolute;
    width: 60px;
    height: 60px;
    border-radius: 50%;
    background-color: rgb(185, 185, 185);
    bottom: -30px;
    border: 1px solid #333;

/* css3 그라데이션 */
/* background-image: linear-gradient(45deg, black, rgb(145, 145, 221) 70%, gray); */
/* background-image: radial-gradient(circle, rgb(255, 255, 255), gray, black); */

background-image: radial-gradient(farthest-side at 20px 20px, rgb(255, 255, 255), rgb(128, 128, 128));


}
/* [배경이미지에 있다. 뭐가? 그라데이션 */
/* [ 선형 그라데이션 ]
예)
linear-gradient(방향, 각도, 색 비율%, 색2 비율%, ... ...);
방향값은 to top, to bottom, to left, to right
-각도는 숫자 deg
-> 방향 또는 각도를 사용, 안 쓰면 to bottom 기본값
-> 색상을 쓰고 뒤에 필요한 경우 비율을 사용
-> 색상 뒤 비율을 안 쓰면 등분할 됨.
*/

/* [ 원형 그라데이션 ]
예)
background-image: radial-gradient(circle, rgb(255, 255, 255), gray, black);
radial-gradient(옵션, 색1 비율%, 색2 비율%);
-옵션: circle - 원형, 안쓰면 박스에 맞춤
-세밀한 옵션주기
(특정위치를 중심으로 빛반사효과)
    ->>> 세부옵션 at 가로위치 세로위치
    ->>> 세부옵션 종류 4가지:
    1) closest-side / 2)farthest-side
    3) closest-corner / 4)farthest-corner
예) radial-gradient(closest-corner at 30px 15px, white, blue)

-> 가로, 세로 위치는 px, % 단위 사용가능
-> 색상을 쓰고 뒤에 필요한 경우 비율을 사용
-> 색상 뒤 비율을 안 쓰면 등분할 됨.
*/

/* 왼팔가상요소 */
.a1::before{
    left: -13px;
}

/* 오른팔가상요소 */
.a2::before{
    right: -13px;
}

/* 가상요소로 손 그림자 주기 */
.arm::after{
    content: '';
    display: block;
    position: absolute;
    width: 20px;
    height: 35px;
    background-color: #000;
    bottom: -30px;
    border-radius: 10px 10px 5px 5px ;

    clip-path: polygon(0% 100%, 50% 0%, 100% 100%);
}

/* 클리핑기법을 사용하여 그림자를 삼각형으로 만들자
-> 다각형 클리핑 
clip-path: polygon(x1 y1, x2 y2, ...)
-> 소괄호 안은 비울 수 없다.
-> 각 좌표값은 px, %로 대상 내부영역임
예컨데 삼각형은 점을 3개 찍는다. 
*/

/* 왼팔가상요소 */
.a1::after{
    left: 8px;
}

/* 오른팔가상요소 */
.a2::after{
    right: 8px;
}


/* 왼팔 */
.a1{
top: 20px;
left: -30px;
}

/* 오른팔 */
.a2{
    right: -30px;
    top: 20px;
}

/* 공통 다리 */
.leg{
    width: 55px;
    height: 370px;
    background-size: 100%;
    background-repeat: repeat-y;
    border-radius: 20%;
}

/* 가상요소로 발 만들기 */

/* 발 공통 */
.leg::before{
    content: '';
    display: block;
    position: absolute;
    width: 70px;
    height: 40px;
    background-image: radial-gradient(farthest-side at 20px 20px, rgb(255, 255, 255), rgb(128, 128, 128));
    border-radius: 30px 30px 0 0;
    /* 위쪽만 둘글게 보라보라 */
    bottom: -10px;
    border-bottom: 15px solid #333;
    left: -7px;
}

/* 왼발 */

/* 오른발 */




/* 왼다리 */
.l1{
    top: 300px;
    left: 10px;
}

/* 오른다리 */
.l2{
    right: 10px;
    top: 300px;
}

/* 어깨공통 */
.shd{
    width: 80px;
    height: 80px;
}

/* 왼어깨 */
.s1{
    left: -50px;
    top: -5px;
    border-radius: 50% 15px;
}

/* 오른어깨 */
.s2{
    border-radius: 15px 50%;
    right: -50px;
    top: -5px;   
}

/* TV */
.tv{
    width: 220px;
    height: 150px;
    top: 80px;
    left: 15px;
    border-radius: 10px;
    background-image: url(../images/tv.jpg);
}

.tv .screen{
    position: absolute;
    top: 10px;
    left: 14px;
    width: 152px;
    height: 118px;
    background-color: rgba(0, 0, 0, 0.226);
    border-radius: 15px;
    overflow: hidden;
}

/* 아이프레임 */
.screen iframe{
    position: absolute;
    top: -40px;
    left: -66px;
    width: 187%;
    height: 170%;
    border: none;

}

/************************************** 2-2. 로봇 설명박스 **************************************/

.dcbx{
    max-width: 800px;
    margin: 0 auto;
    color: #fff;
    background-color: rgba(0, 0, 0, 0.459);
    /* 하단공간 */
    margin-bottom: 200px;
    padding: 15px 30px;
    border: 3px solid #fff;
    border-radius: 20px;
    /* 글자그림자: x y blur 색 */
    text-shadow: 1px 1px 1px #000;


/* 박스 그림자 : inset은 내부그림자 */
box-shadow: inset 0 0 20px blue, inset 0 0 50px 10px cyan;
}

/* 2-2-1. 로봇설명 제목 */
.dcbx h2{
    text-align: center;
    font-size: 35px;
    font-weight: bold;
    color: lime;
    background-color: rgba(255, 255, 255, 0.349);
    border-radius: 20px;
    /* sticky 예정 */

}

/* 2-2-2. 로봇정보출처 */
.dcbx small{
    display: block;
    text-align: center;
    color: yellow;
    font-size: 12px;
    padding-top: 18px;
}

/* 2-2-3. 설명문단 */
.dcbx p{
    font-size: 15px;
    line-height: 1.8;
    letter-spacing: 1px;
    /* 자간 */
    word-spacing: 2px;
    /* 단어사이 */

    /* 다중열속성표시 */
column-count: 3;
/* 
가독성을 위한 다단설정
다단표시(다중열속성)
*/

/* 다중열 구분선
보더설정과 비슷
두깨 종류 색상(두종색)
*/
column-rule: 2px dotted lightgreen;
text-align: justify;
 
/* 단어깨기 */
/* 브레이크 올은 모든 단어 깨기 */
word-break: break-all;

/* 다중열 사이간격 */
column-gap: 50px;



}

/* 설명문단 첫글자 가상요소 */
.dcbx p::first-letter{
    font-size: 30px;
    color: rgb(42, 172, 177);
    font-weight: bold;
}


/************************************** 3. 하단영역 **************************************/
.info{
    padding: 50px;
    text-align: center;
    color: #fff;
    background-color: rgba(87, 87, 87, 0.418);
    font: 30px 'black ops one';
    text-shadow: 2px 2px 2px #000;
}
/* 가상요소로 아이콘 넣기 */
.info span::before{
    content: '';
    display: inline-block;
    width: 30px;
    height: 30px;
    outline: 1px solid lime;
    vertical-align: -5px;
    margin-right: 10px;
    background: pink url(../images/robot_03.png);
    /* 배경 세부설정은 한번에 설정하는 코드 아래에 있어야 덮어쓴다. */
    background-size: 60px;
    background-position: -11px 0;
    border-radius: 50%;
    border: 1px solid lime;
}


/*************************************** 미디어쿼리 ***************************************/
@media screen and (max-width:770px) {
    .dcbx p{
        column-count: 2;
    }
}
/* 미디어쿼리 770px 이하 */
@media screen and (max-width:550px) {
    /* 설명문단 다단변경 */
    .dcbx p{
        column-count: 1;
    }
}
/* 미디어쿼리 550px 이하 */






